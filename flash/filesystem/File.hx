package flash.filesystem;

extern class File extends flash.net.FileReference
{	
	@:require(AIR1)	static var applicationDirectory(default,null) : File;
	@:require(AIR1)	static var applicationStorageDirectory(default,null) : File;
	@:require(AIR4)	static var cacheDirectory(default,null) : File;
	@:require(AIR1)	static var desktopDirectory(default,null) : File;
	@:require(AIR1)	static var documentsDirectory(default,null) : File;
	@:require(AIR2)	var downloaded : Bool;
	@:require(AIR1)	var exists(default,null) : Bool;
	@:require(AIR1)	var icon(default,null) : flash.desktop.Icon;
	@:require(AIR1)	var isDirectory(default,null) : Bool;
	@:require(AIR1)	var isHidden(default,null) : Bool;
	@:require(AIR1)	var isPackage(default,null) : Bool;
	@:require(AIR1)	var isSymbolicLink(default, null) : Bool;
	@:require(AIR1)	static var lineEnding(default,null) : String;
	@:require(AIR1)	var nativePath : String;
	@:require(AIR1)	var parent(default, null) : File;
	@:require(AIR24)static var permissionStatus(default, null) : String;
	@:require(AIR4)	var preventBackup : Bool;
	@:require(AIR1)	static var separator(default,null) : String;
	@:require(AIR1)	var spaceAvailable(default, null) : Float;
	@:require(AIR1)	static var systemCharset(default,null) : String;
	@:require(AIR1)	var url : String;
	@:require(AIR1)	static var userDirectory(default,null) : File;
	@:require(AIR1)	function new(?path : String) : Void;
	@:require(AIR1)	function browseForDirectory(title : String) : Void;
	@:require(AIR1)	function browseForOpen(title : String, ?typeFilter : Array<flash.net.FileFilter >) : Void;
	@:require(AIR1)	function browseForOpenMultiple(title : String, ?typeFilter : Array<flash.net.FileFilter >) : Void;
	@:require(AIR1)	function browseForSave(title : String) : Void;
	@:require(AIR1)	function canonicalize() : Void;
	@:require(AIR1)	function clone() : File;
	@:require(AIR1)	function copyTo(newLocation : flash.net.FileReference, overwrite : Bool=false) : Void;
	@:require(AIR1)	function copyToAsync(newLocation : flash.net.FileReference, overwrite : Bool=false) : Void;
	@:require(AIR1)	function createDirectory() : Void;
	@:require(AIR1)	static function createTempDirectory() : File;
	@:require(AIR1)	static function createTempFile() : File;
	@:require(AIR1)	function deleteDirectory(deleteDirectoryContents : Bool=false) : Void;
	@:require(AIR1)	function deleteDirectoryAsync(deleteDirectoryContents : Bool=false) : Void;
	@:require(AIR1)	function deleteFile() : Void;
	@:require(AIR1)	function deleteFileAsync() : Void;
	@:require(AIR1)	function getDirectoryListing() : Array<File>;
	@:require(AIR1)	function getDirectoryListingAsync() : Void;
	@:require(AIR1)	function getRelativePath(ref : flash.net.FileReference, useDotDot : Bool=false) : String;
	@:require(AIR1)	static function getRootDirectories() : Array<File>;
	@:require(AIR1)	function moveTo(newLocation : flash.net.FileReference, overwrite : Bool=false) : Void;
	@:require(AIR1)	function moveToAsync(newLocation : flash.net.FileReference, overwrite : Bool=false) : Void;
	@:require(AIR1)	function moveToTrash() : Void;
	@:require(AIR1)	function moveToTrashAsync() : Void;
	@:require(AIR2)	function openWithDefaultApplication() : Void;
	@:require(AIR24)function requestPermission() : Void;
	@:require(AIR2)	function resolvePath(path : String) : File;
}